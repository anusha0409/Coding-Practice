#include <bits/stdc++.h>
using namespace std;
int knapsack(int weights[], int val[],int W, int n, vector < vector <int>> &dp)
{  
    if(W==0 || n==0)
    return 0;
    if(dp[n][W]  != -1)
    return dp[n][W];
    if(weights[n-1] <= W)
    dp[n][W]=max(val[n-1] + knapsack(weights, val , W-weights[n-1] , n-1, dp) , knapsack(weights, val , W , n-1, dp));
    else if(weights[n-1] > W)
    dp[n][W]=knapsack(weights, val , W , n-1, dp);
    return dp[n][W];
}
int main() {
int t;
cin>>t;
while(t--)
{
    int n,W;
    cin>>n;
    cin>>W;
    int weights[n],val[n];
    int i;
    for(i=0;i<n;i++)
    cin>>val[i];
    for(i=0;i<n;i++)
    cin>>weights[i];
    vector < vector <int>> dp(n+1,vector <int> (W+1,-1));
    int ans=knapsack(weights, val, W, n, dp);
    cout<<ans<<endl;
}
}

class Solution {
public:
    vector<string> findWords(vector<string>& words) 
    {
    unordered_set <char> set1({'q','w','e','r','t','y','u','i','o','p'});
    unordered_set <char> set2({'a','s','d','f','g','h','j','k','l'});
    unordered_set <char> set3({'z','x','c','v','b','n','m'});
        vector<string> ans;
        int i,j,n=words.size();
        for(i=0;i<n;i++)
        {
            string w=words[i];
            char ch=w[0];
            ch=tolower(ch);
            unordered_set <char> currSet;
            if(set1.find(ch)!=set1.end())
            { currSet=set1; }
            if(set2.find(ch)!=set2.end())
            { currSet=set2; }
            if(set3.find(ch)!=set3.end())
            {  currSet=set3; }
            
            for(j=1;j<w.length();j++)
            {   
              char  ch1=w[j];
                ch1=tolower(ch1);
                if(currSet.find(ch1)!=currSet.end())
                {     continue;} 
                else break;
            }
            if(j==w.length())
                ans.push_back(w);
            
        }
        return ans;
    }
};

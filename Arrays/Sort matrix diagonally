class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
            int m=mat.size(),i,j;
        if(m==0) return {{}};
        int n=mat[0].size();
        vector<vector<int>> ans (m,vector<int>(n));
         unordered_map <int, vector <int>> ma;
        unordered_map <int, vector <int>> :: iterator it;
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                ma[i-j+n-1].push_back(mat[i][j]);
            }
        }
        for(it=ma.begin();it!=ma.end();it++)
        {
            vector <int> v=it->second;
            sort(v.begin(),v.end());
            reverse(v.begin(),v.end());
            ma[it->first]=v;
        }
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                ans[i][j]=ma[i-j+n-1].back();
                ma[i-j+n-1].pop_back();
            }
        }
        return ans;
        
            
        
    }
};
